#!/usr/bin/env python3

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import sys
import agent
import os
import json

# Connect the local Redis replica. This is necessary to consistently start
# the service if the leader node is not reachable:
rdb = agent.redis_connect(use_replica=True)
smtp_settings = agent.get_smarthost_settings(rdb)

try:
    with open('config.json', 'r') as fp:
        config = json.load(fp)
except:
    config = {}

host = config.get('host', 'localhost')
envfile = "smarthost.env"

if not smtp_settings['enabled']:
    # create an empty file, so the passbolt-app will not fail
    with open(envfile, 'w') as fp:
        pass

# Using .tmp suffix: do not overwrite the target file until the new one is
# saved to disk:
with open(envfile + ".tmp", "w") as efp:
    print(f"EMAIL_TRANSPORT_DEFAULT_HOST={smtp_settings['host']}", file=efp)
    print(f"EMAIL_TRANSPORT_DEFAULT_PORT={smtp_settings['port']}", file=efp)
    print(f"EMAIL_TRANSPORT_DEFAULT_USERNAME={smtp_settings['username']}", file=efp)
    print(f"EMAIL_TRANSPORT_DEFAULT_PASSWORD={smtp_settings['password']}", file=efp)
    print(f"EMAIL_TRANSPORT_DEFAULT_TLS={smtp_settings['encrypt_smtp']}", file=efp)
    print(f"EMAIL_DEFAULT_FROM=no-reply@{host}", file=efp)

# Commit changes by replacing the existing envfile:
os.replace(envfile + ".tmp", envfile)
